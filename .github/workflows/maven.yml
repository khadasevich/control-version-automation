# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Run Selenium Tests and Add Allure Report

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: browser-actions/setup-chrome@v1
    - run: chrome --version
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run Tests
      run: mvn clean test -Dvcs.token=$API_TOKEN -Dvcs.username=$USERNAME -Dvcs.password=$PASSWORD
      env:
        API_TOKEN: ${{ secrets.API_TOKEN }}
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}

    - name: Install Allure CLI 
      run: | 
        curl -sLo allure.zip https://github.com/allure-framework/allure2/releases/latest/download/allure-2.20.1.zip unzip allure.zip -d /opt/allure sudo ln -s /opt/allure/bin/allure /usr/bin/allure 
        
    - name: Generate Allure Report 
      run: allure generate --clean target/allure-results -o target/allure-report 
      
    - name: Deploy Allure Report to GitHub Pages 
      uses: peaceiris/actions-gh-pages@v3 
      with: 
        github_token: ${{ secrets.GITHUB_TOKEN }} 
        publish_dir: ./target/allure-report 
